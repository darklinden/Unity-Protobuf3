// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Clazz.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace School {

  /// <summary>Holder for reflection information generated from Clazz.proto</summary>
  public static partial class ClazzReflection {

    #region Descriptor
    /// <summary>File descriptor for Clazz.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClazzReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtDbGF6ei5wcm90bxIGc2Nob29sGg1TdHVkZW50LnByb3RvGg1UZWFjaGVy",
            "LnByb3RvIlkKBUNsYXp6EgoKAmlkGAEgASgFEiEKCHN0dWRlbnRzGAIgAygL",
            "Mg8uc2Nob29sLlN0dWRlbnQSIQoIdGVhY2hlcnMYAyADKAsyDy5zY2hvb2wu",
            "VGVhY2hlcmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::School.StudentReflection.Descriptor, global::School.TeacherReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::School.Clazz), global::School.Clazz.Parser, new[]{ "Id", "Students", "Teachers" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Clazz : pb::IMessage<Clazz>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Clazz> _parser = new pb::MessageParser<Clazz>(() => new Clazz());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Clazz> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::School.ClazzReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Clazz() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Clazz(Clazz other) : this() {
      id_ = other.id_;
      students_ = other.students_.Clone();
      teachers_ = other.teachers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Clazz Clone() {
      return new Clazz(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "students" field.</summary>
    public const int StudentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::School.Student> _repeated_students_codec
        = pb::FieldCodec.ForMessage(18, global::School.Student.Parser);
    private readonly pbc::RepeatedField<global::School.Student> students_ = new pbc::RepeatedField<global::School.Student>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::School.Student> Students {
      get { return students_; }
    }

    /// <summary>Field number for the "teachers" field.</summary>
    public const int TeachersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::School.Teacher> _repeated_teachers_codec
        = pb::FieldCodec.ForMessage(26, global::School.Teacher.Parser);
    private readonly pbc::RepeatedField<global::School.Teacher> teachers_ = new pbc::RepeatedField<global::School.Teacher>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::School.Teacher> Teachers {
      get { return teachers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Clazz);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Clazz other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!students_.Equals(other.students_)) return false;
      if(!teachers_.Equals(other.teachers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= students_.GetHashCode();
      hash ^= teachers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      students_.WriteTo(output, _repeated_students_codec);
      teachers_.WriteTo(output, _repeated_teachers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      students_.WriteTo(ref output, _repeated_students_codec);
      teachers_.WriteTo(ref output, _repeated_teachers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += students_.CalculateSize(_repeated_students_codec);
      size += teachers_.CalculateSize(_repeated_teachers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Clazz other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      students_.Add(other.students_);
      teachers_.Add(other.teachers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            students_.AddEntriesFrom(input, _repeated_students_codec);
            break;
          }
          case 26: {
            teachers_.AddEntriesFrom(input, _repeated_teachers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            students_.AddEntriesFrom(ref input, _repeated_students_codec);
            break;
          }
          case 26: {
            teachers_.AddEntriesFrom(ref input, _repeated_teachers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
